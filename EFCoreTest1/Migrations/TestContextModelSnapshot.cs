// <auto-generated />
using EFCoreTest1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EFCoreTest1.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreTest1.Domain.Afspraak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BeginDatum");

                    b.HasKey("Id");

                    b.ToTable("Afspraken");
                });

            modelBuilder.Entity("EFCoreTest1.Domain.StatusHistorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Status");

                    b.Property<int?>("TaakId");

                    b.Property<int?>("TaakId1");

                    b.HasKey("Id");

                    b.HasIndex("TaakId");

                    b.HasIndex("TaakId1");

                    b.ToTable("StatusHistories");
                });

            modelBuilder.Entity("EFCoreTest1.Domain.Taak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naam");

                    b.HasKey("Id");

                    b.ToTable("Taken");
                });

            modelBuilder.Entity("EFCoreTest1.Domain.Afspraak", b =>
                {
                    b.OwnsOne("EFCoreTest1.Domain.AdresAfspraak", "Adres", b1 =>
                        {
                            b1.Property<int>("AfspraakId");

                            b1.Property<string>("Straat");

                            b1.ToTable("Afspraken");

                            b1.HasOne("EFCoreTest1.Domain.Afspraak")
                                .WithOne("Adres")
                                .HasForeignKey("EFCoreTest1.Domain.AdresAfspraak", "AfspraakId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("EFCoreTest1.Domain.HuisnummerType", "Huisnummer", b2 =>
                                {
                                    b2.Property<int>("AdresAfspraakAfspraakId");

                                    b2.Property<int>("Nummer");

                                    b2.Property<string>("Toevoeging");

                                    b2.ToTable("Afspraken");

                                    b2.HasOne("EFCoreTest1.Domain.AdresAfspraak")
                                        .WithOne("Huisnummer")
                                        .HasForeignKey("EFCoreTest1.Domain.HuisnummerType", "AdresAfspraakAfspraakId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("EFCoreTest1.Domain.StatusHistorie", b =>
                {
                    b.HasOne("EFCoreTest1.Domain.Taak", "Taak")
                        .WithMany()
                        .HasForeignKey("TaakId");

                    b.HasOne("EFCoreTest1.Domain.Taak")
                        .WithMany("Statussen")
                        .HasForeignKey("TaakId1");
                });
#pragma warning restore 612, 618
        }
    }
}
